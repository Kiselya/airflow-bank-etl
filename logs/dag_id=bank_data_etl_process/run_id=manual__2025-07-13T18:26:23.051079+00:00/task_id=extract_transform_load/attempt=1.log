{"timestamp":"2025-07-13T18:26:26.335764","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-13T18:26:26.336234","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/bank_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-13T18:26:26.390102Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:26:26.390301Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:26:26.390415Z","level":"info","event":"Current task name:extract_transform_load","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:26:26.390495Z","level":"info","event":"Dag name:bank_data_etl_process","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:26:26.408769","level":"info","event":"Connection Retrieved 'postgres_bank_ds'","logger":"airflow.hooks.base"}
{"timestamp":"2025-07-13T18:26:26.409870","level":"info","event":"===== Processing file /opt/airflow/dags/data/md_account_d.csv for table MD_ACCOUNT_D with encoding cp1251 =====","logger":"root"}
{"timestamp":"2025-07-13T18:26:26.418069","level":"warning","event":"/opt/airflow/dags/bank_etl_dag.py:81: UserWarning: Parsing dates in %Y-%m-%d format when dayfirst=True was specified. Pass `dayfirst=False` or specify a format to silence this warning.\n  df[col] = pd.to_datetime(df[col], dayfirst=True, errors='coerce')\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T18:26:26.473024","level":"info","event":"===== Processing file /opt/airflow/dags/data/md_currency_d.csv for table MD_CURRENCY_D with encoding koi8-r =====","logger":"root"}
{"timestamp":"2025-07-13T18:26:26.479137","level":"warning","event":"/opt/airflow/dags/bank_etl_dag.py:81: UserWarning: Parsing dates in %Y-%m-%d format when dayfirst=True was specified. Pass `dayfirst=False` or specify a format to silence this warning.\n  df[col] = pd.to_datetime(df[col], dayfirst=True, errors='coerce')\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T18:26:26.498351","level":"info","event":"===== Processing file /opt/airflow/dags/data/md_exchange_rate_d.csv for table MD_EXCHANGE_RATE_D with encoding cp1251 =====","logger":"root"}
{"timestamp":"2025-07-13T18:26:26.503548","level":"warning","event":"/opt/airflow/dags/bank_etl_dag.py:81: UserWarning: Parsing dates in %Y-%m-%d format when dayfirst=True was specified. Pass `dayfirst=False` or specify a format to silence this warning.\n  df[col] = pd.to_datetime(df[col], dayfirst=True, errors='coerce')\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T18:26:26.522928","level":"info","event":"===== Processing file /opt/airflow/dags/data/md_ledger_account_s.csv for table MD_LEDGER_ACCOUNT_S with encoding koi8-r =====","logger":"root"}
{"timestamp":"2025-07-13T18:26:26.526594","level":"warning","event":"/opt/airflow/dags/bank_etl_dag.py:81: UserWarning: Parsing dates in %Y-%m-%d format when dayfirst=True was specified. Pass `dayfirst=False` or specify a format to silence this warning.\n  df[col] = pd.to_datetime(df[col], dayfirst=True, errors='coerce')\n","logger":"py.warnings"}
{"timestamp":"2025-07-13T18:26:26.593875","level":"info","event":"===== Processing file /opt/airflow/dags/data/ft_balance_f.csv for table FT_BALANCE_F with encoding cp1251 =====","logger":"root"}
{"timestamp":"2025-07-13T18:26:26.617625","level":"info","event":"===== Processing file /opt/airflow/dags/data/ft_posting_f.csv for table FT_POSTING_F with encoding cp1251 =====","logger":"root"}
{"timestamp":"2025-07-13T18:26:28.968428","level":"info","event":"Done. Returned value was: 34268","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
{"timestamp":"2025-07-13T18:26:28.968869","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('01980509-c4eb-7f04-b690-b3381e90fcb9'), task_id='extract_transform_load', dag_id='bank_data_etl_process', run_id='manual__2025-07-13T18:26:23.051079+00:00', try_number=1, map_index=-1, hostname='1c5147aba516', context_carrier={}, task=<Task(_PythonDecoratedOperator): extract_transform_load>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 13, 18, 26, 26, 98143, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
{"timestamp":"2025-07-13T18:26:29.020379Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:26:29.020589Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-13T18:26:29.020736Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): extract_transform_load>","chan":"stdout","logger":"task"}
